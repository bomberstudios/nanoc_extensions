# nanoc extensions

This is a playground for [nanoc](http://nanoc.stoneship.org) plugins, filters and commands.

Feel free to make with them as you please.

## commands/

### validate.rb

A command that validates the HTML files in the output folder. It uses the W3C online validator, so it needs network access.

So far it just checks if the HTML is valid, but doesn't give you any clue if it isn't.

For more info, run

      $ nanoc help validate


## filters/

### copy.rb

A dumb filter that copies a binary asset to the output folder. Coded as an example of how a binary filter works.

### sips_flatten.rb

Uses the 'sips' command line tool in Mac OS X to flatten Fireworks images. Output format can be defined in the asset's YAML file using the 'flatten_format' property:

      binary: true
      filters: ['sips_flatten']
      flatten_format: 'png'

where `flatten_format` can be `png` (the default), `jpeg`, `tiff`, `gif`, `jp2`, `pict`, `bmp`, `qtif`, `psd`, `sgi` or `tga`.

It supports multiple asset representations, so you can output multiple formats by having a YAML like:

      binary: true
      filters: ['sips_flatten']
      reps:
        default:
          flatten_format: 'png'
          custom_path: /assets/image.png
        jpg:
          flatten_format: 'jpeg'
          custom_path: /assets/image.jpg


### sips_thumbnail.rb

Uses the 'sips' command line tool in Mac OS X to build image thumbnails. Output format can be defined in the asset's YAML file using the 'thumbnail_format' property. Max width/height is set with the `thumbnail_size` property:

      binary: true
      filters: ['sips_thumbnail']
      thumbnail_format: 'png'
      thumbnail_size: 200

where `thumbnail_format` can be `png` (the default), `jpeg`, `tiff`, `gif`, `jp2`, `pict`, `bmp`, `qtif`, `psd`, `sgi` or `tga`.

It supports multiple asset representations, so you can output multiple thumbnails by having a YAML like:

      binary: true
      filters: ['sips_thumbnail']
      reps:
        big:
          thumbnail_size: 200
        medium:
          thumbnail_size: 120
        small:
          thumbnail_size: 64
